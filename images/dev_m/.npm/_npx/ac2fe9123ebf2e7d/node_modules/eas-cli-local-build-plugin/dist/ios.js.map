{"version":3,"file":"ios.js","sourceRoot":"","sources":["../src/ios.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uDAA2D;AAC3D,mDAAoF;AAEpF,uDAA+B;AAE/B,uCAAyD;AACzD,mDAA6C;AAE7C,2CAA+C;AAC/C,sDAA8B;AAEvB,KAAK,UAAU,aAAa,CACjC,GAAY,EACZ,EAAE,UAAU,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAe;;IAEnD,MAAM,WAAW,GAAG,MAAA,GAAG,CAAC,OAAO,0CAAE,WAAW,CAAC;IAC7C,MAAM,UAAU,GAAG,MAAA,GAAG,CAAC,OAAO,0CAAE,UAAU,CAAC;IAC3C,MAAM,GAAG,iDACJ,OAAO,GACP,CAAC,WAAW,IAAI,EAAE,0BAA0B,EAAE,WAAW,EAAE,CAAC,GAC5D,CAAC,UAAU,IAAI,EAAE,yBAAyB,EAAE,UAAU,EAAE,CAAC,CAC7D,CAAC;IACF,MAAM,GAAG,GAAG,IAAI,0BAAY,CAAU,GAAG,EAAE;QACzC,UAAU;QACV,MAAM,EAAN,gBAAM;QACN,SAAS,EAAT,kBAAS;QACT,uBAAuB,EAAE,sCAA4B;QACrD,eAAe,EAAE,KAAK,EAAE,IAAkB,EAAE,KAAe,EAAE,MAAe,EAAE,EAAE;YAC9E,IAAI,IAAI,KAAK,0BAAY,CAAC,mBAAmB,EAAE;gBAC7C,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,MAAM,IAAA,4BAAgB,EAAC,KAAK,EAAE,MAAM,CAAC,CAAC;aAC9C;QACH,CAAC;QACD,GAAG;QACH,QAAQ;QACR,eAAe,EAAE,gBAAM,CAAC,eAAe;KACxC,CAAC,CAAC;IAEH,MAAM,GAAG,CAAC,aAAa,CAAC,0BAAU,CAAC,WAAW,EAAE,KAAK,IAAI,EAAE;QACzD,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,IAAA,cAAI,EAAC,GAAG,CAAC,GAAG,EAAE,SAAS,CAAC,EAAE,EAAE,gBAAgB,CAAC,CAAC;IACvE,CAAC,CAAC,CAAC;IAEH,OAAO,MAAM,sBAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AACxC,CAAC;AAjCD,sCAiCC","sourcesContent":["import { Ios, BuildPhase, Env } from '@expo/eas-build-job';\nimport { Builders, BuildContext, ArtifactType, Artifacts } from '@expo/build-tools';\nimport { bunyan } from '@expo/logger';\nimport omit from 'lodash/omit';\n\nimport { runGlobalExpoCliCommandAsync } from './expoCli';\nimport logger, { logBuffer } from './logger';\nimport { BuildParams } from './types';\nimport { prepareArtifacts } from './artifacts';\nimport config from './config';\n\nexport async function buildIosAsync(\n  job: Ios.Job,\n  { workingdir, env: baseEnv, metadata }: BuildParams\n): Promise<Artifacts> {\n  const buildNumber = job.version?.buildNumber;\n  const appVersion = job.version?.appVersion;\n  const env: Env = {\n    ...baseEnv,\n    ...(buildNumber && { EAS_BUILD_IOS_BUILD_NUMBER: buildNumber }),\n    ...(appVersion && { EAS_BUILD_IOS_APP_VERSION: appVersion }),\n  };\n  const ctx = new BuildContext<Ios.Job>(job, {\n    workingdir,\n    logger,\n    logBuffer,\n    runGlobalExpoCliCommand: runGlobalExpoCliCommandAsync,\n    uploadArtifacts: async (type: ArtifactType, paths: string[], logger?: bunyan) => {\n      if (type !== ArtifactType.APPLICATION_ARCHIVE) {\n        return null;\n      } else {\n        return await prepareArtifacts(paths, logger);\n      }\n    },\n    env,\n    metadata,\n    skipNativeBuild: config.skipNativeBuild,\n  });\n\n  await ctx.runBuildPhase(BuildPhase.START_BUILD, async () => {\n    ctx.logger.info({ job: omit(ctx.job, 'secrets') }, 'Starting build');\n  });\n\n  return await Builders.iosBuilder(ctx);\n}\n"]}