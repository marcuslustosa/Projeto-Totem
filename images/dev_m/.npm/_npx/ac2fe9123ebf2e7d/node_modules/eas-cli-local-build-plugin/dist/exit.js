"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.shouldExit = exports.registerHandler = exports.listenForInterrupts = void 0;
const logger_1 = __importDefault(require("./logger"));
const handlers = [];
let shouldExitStatus = false;
function listenForInterrupts() {
    let handlerInProgress = false;
    const handleExit = async () => {
        try {
            // when eas-cli calls childProcess.kill() local build receives
            // signal twice in some cases
            if (handlerInProgress) {
                return;
            }
            handlerInProgress = true;
            logger_1.default.error({ phase: 'ABORT' }, 'Received termination signal.');
            shouldExitStatus = true;
            await Promise.allSettled(handlers.map((handler) => {
                return handler();
            }));
        }
        finally {
            handlerInProgress = false;
        }
        process.exit(1);
    };
    process.on('SIGTERM', handleExit);
    process.on('SIGINT', handleExit);
}
exports.listenForInterrupts = listenForInterrupts;
function registerHandler(fn) {
    handlers.push(fn);
}
exports.registerHandler = registerHandler;
function shouldExit() {
    return shouldExitStatus;
}
exports.shouldExit = shouldExit;
//# sourceMappingURL=exit.js.map