{"version":3,"file":"parseInput.js","sourceRoot":"","sources":["../src/parseInput.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Job,\n  sanitizeJob,\n  ArchiveSourceType,\n  Metadata,\n  sanitizeMetadata,\n} from '@expo/eas-build-job';\nimport Joi from 'joi';\nimport chalk from 'chalk';\nimport fs from 'fs-extra';\n\nimport { registerHandler } from './exit';\n\nconst packageJson = require('../package.json');\n\ninterface Params {\n  job: Job;\n  metadata: Metadata;\n}\n\nconst ParamsSchema = Joi.object<Params>({\n  job: Joi.object().unknown(),\n  metadata: Joi.object().unknown(),\n});\n\nexport async function parseInputAsync(): Promise<Params> {\n  if (process.argv.findIndex((arg) => arg === '--version' || arg === '-v') !== -1) {\n    console.log(packageJson.version);\n    process.exit(0);\n  }\n  const rawInput = process.argv[2];\n\n  if (!rawInput) {\n    displayHelp();\n    process.exit(1);\n  }\n  let parsedParams;\n  try {\n    parsedParams = JSON.parse(Buffer.from(rawInput, 'base64').toString('utf8'));\n  } catch (err) {\n    console.error(`${chalk.red('The input passed as a argument is not base64 encoded json.')}`);\n    throw err;\n  }\n  const params = validateParams(parsedParams);\n  registerHandler(async () => {\n    if (params.job.projectArchive.type === ArchiveSourceType.PATH) {\n      await fs.remove(params.job.projectArchive.path);\n    }\n  });\n  return params;\n}\n\nfunction validateParams(params: object): Params {\n  const { value, error } = ParamsSchema.validate(params, {\n    stripUnknown: true,\n    convert: true,\n    abortEarly: false,\n  });\n  if (error) {\n    throw error;\n  }\n  try {\n    const job = sanitizeJob(value.job);\n    const metadata = sanitizeMetadata(value.metadata);\n    return { ...value, job, metadata };\n  } catch (err) {\n    console.log(`Currently using ${packageJson.name}@${packageJson.version}.`);\n    console.error(\n      chalk.red(\n        `Job object has incorrect format, update to latest versions of ${chalk.bold(\n          'eas-cli'\n        )} and ${chalk.bold(packageJson.name)} to make sure you are using compatible packages.`\n      )\n    );\n    throw err;\n  }\n}\n\nfunction displayHelp(): void {\n  console.log(\n    `This tool is not intended for standalone use, it will be used internally by ${chalk.bold(\n      'eas-cli'\n    )} when building with flag ${chalk.bold('--local')}.`\n  );\n}\n"]}