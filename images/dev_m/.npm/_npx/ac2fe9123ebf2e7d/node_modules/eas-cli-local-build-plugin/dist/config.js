"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const uuid_1 = require("uuid");
const env_paths_1 = __importDefault(require("env-paths"));
const { temp } = (0, env_paths_1.default)('eas-build-local');
const envLoggerLevel = process.env.EAS_LOCAL_BUILD_LOGGER_LEVEL;
const envWorkingdir = process.env.EAS_LOCAL_BUILD_WORKINGDIR;
const envSkipCleanup = process.env.EAS_LOCAL_BUILD_SKIP_CLEANUP;
const envSkipNativeBuild = process.env.EAS_LOCAL_BUILD_SKIP_NATIVE_BUILD;
const envArtifactsDir = process.env.EAS_LOCAL_BUILD_ARTIFACTS_DIR;
const envArtifactPath = process.env.EAS_LOCAL_BUILD_ARTIFACT_PATH;
if (envLoggerLevel && !['debug', 'info', 'warn', 'error'].includes(envLoggerLevel)) {
    throw new Error('Invalid value for EAS_LOCAL_BUILD_LOGGER_LEVEL, one of info, warn, or error is expected');
}
exports.default = {
    workingdir: envWorkingdir !== null && envWorkingdir !== void 0 ? envWorkingdir : path_1.default.join(temp, (0, uuid_1.v4)()),
    skipCleanup: envSkipCleanup === '1',
    skipNativeBuild: envSkipNativeBuild === '1',
    artifactsDir: envArtifactsDir !== null && envArtifactsDir !== void 0 ? envArtifactsDir : process.cwd(),
    artifactPath: envArtifactPath,
    logger: {
        level: (envLoggerLevel !== null && envLoggerLevel !== void 0 ? envLoggerLevel : 'info'),
    },
};
//# sourceMappingURL=config.js.map