{"version":3,"file":"workingdir.js","sourceRoot":"","sources":["../src/workingdir.ts"],"names":[],"mappings":";;;;;;AAAA,gDAAwB;AAExB,kDAA0B;AAC1B,wDAA0B;AAE1B,sDAA8B;AAC9B,sDAA8B;AAC9B,iCAAyC;AAElC,KAAK,UAAU,sBAAsB;IAC1C,MAAM,EAAE,UAAU,EAAE,GAAG,gBAAM,CAAC;IAC9B,gBAAM,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,EAAE,wBAAwB,UAAU,EAAE,CAAC,CAAC;IAEjF,IAAI,CAAC,MAAM,kBAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,MAAM,kBAAE,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;QAClF,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;KAC7C;IACD,MAAM,kBAAE,CAAC,MAAM,CAAC,cAAI,CAAC,IAAI,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC,CAAC;IACpD,MAAM,kBAAE,CAAC,MAAM,CAAC,cAAI,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC;IAChD,IAAA,sBAAe,EAAC,KAAK,IAAI,EAAE;QACzB,IAAI,CAAC,gBAAM,CAAC,WAAW,EAAE;YACvB,MAAM,kBAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;SAC7B;aAAM;YACL,OAAO,CAAC,KAAK,CACX,eAAK,CAAC,MAAM,CAAC,oEAAoE,CAAC,CACnF,CAAC;SACH;IACH,CAAC,CAAC,CAAC;IACH,OAAO,UAAU,CAAC;AACpB,CAAC;AAnBD,wDAmBC","sourcesContent":["import path from 'path';\n\nimport chalk from 'chalk';\nimport fs from 'fs-extra';\n\nimport config from './config';\nimport logger from './logger';\nimport { registerHandler } from './exit';\n\nexport async function prepareWorkingdirAsync(): Promise<string> {\n  const { workingdir } = config;\n  logger.info({ phase: 'SETUP_WORKINGDIR' }, `Preparing workingdir ${workingdir}`);\n\n  if ((await fs.pathExists(workingdir)) && (await fs.readdir(workingdir)).length > 0) {\n    throw new Error('Workingdir is not empty.');\n  }\n  await fs.mkdirp(path.join(workingdir, 'artifacts'));\n  await fs.mkdirp(path.join(workingdir, 'build'));\n  registerHandler(async () => {\n    if (!config.skipCleanup) {\n      await fs.remove(workingdir);\n    } else {\n      console.error(\n        chalk.yellow(\"EAS_LOCAL_BUILD_SKIP_CLEANUP is set, working dir won't be removed.\")\n      );\n    }\n  });\n  return workingdir;\n}\n"]}