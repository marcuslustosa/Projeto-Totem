{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;AAAA,oDAA4B;AAC5B,+BAAiC;AAEjC,wDAA0B;AAC1B,8CAAsB;AAEtB,MAAM,QAAQ,GAAG,IAAA,gBAAS,EAAC,gBAAM,CAAC,QAAQ,CAAC,CAAC;AAE5C,KAAK,UAAU,YAAY,CACzB,MAAc,EACd,UAAkB,EAClB,EAAE,KAAK,EAAE,OAAO,EAAwC;IAExD,IAAI,YAAY,GAAG,CAAC,CAAC;IACrB,SAAS;QACP,YAAY,IAAI,CAAC,CAAC;QAClB,IAAI;YACF,MAAM,QAAQ,CAAC,aAAG,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,kBAAE,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC,CAAC;YAClF,OAAO;SACR;QAAC,OAAO,GAAQ,EAAE;YACjB,IAAI,MAAM,kBAAE,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;gBACnC,MAAM,kBAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;aAC7B;YACD,IAAI,YAAY,GAAG,CAAC,KAAK,aAAL,KAAK,cAAL,KAAK,GAAI,CAAC,CAAC,EAAE;gBAC/B,MAAM,IAAI,KAAK,CAAC,gCAAgC,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,OAAO,KAAK,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,KAAK,EAAE,CAAC,CAAC;aAChF;SACF;KACF;AACH,CAAC;AAED,kBAAe,YAAY,CAAC","sourcesContent":["import stream from 'stream';\nimport { promisify } from 'util';\n\nimport fs from 'fs-extra';\nimport got from 'got';\n\nconst pipeline = promisify(stream.pipeline);\n\nasync function downloadFile(\n  srcUrl: string,\n  outputPath: string,\n  { retry, timeout }: { retry?: number; timeout?: number }\n): Promise<void> {\n  let attemptCount = 0;\n  for (;;) {\n    attemptCount += 1;\n    try {\n      await pipeline(got.stream(srcUrl, { timeout }), fs.createWriteStream(outputPath));\n      return;\n    } catch (err: any) {\n      if (await fs.pathExists(outputPath)) {\n        await fs.remove(outputPath);\n      }\n      if (attemptCount > (retry ?? 0)) {\n        throw new Error(`Failed to download the file: ${err?.message}\\n${err?.stack}`);\n      }\n    }\n  }\n}\n\nexport default downloadFile;\n"]}