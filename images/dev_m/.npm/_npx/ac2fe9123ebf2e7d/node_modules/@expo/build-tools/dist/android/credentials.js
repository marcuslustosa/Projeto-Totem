"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.restoreCredentials = void 0;
const path_1 = __importDefault(require("path"));
const fs_extra_1 = __importDefault(require("fs-extra"));
const uuid_1 = require("uuid");
async function restoreCredentials(ctx) {
    const { buildCredentials } = ctx.job.secrets;
    if (!buildCredentials) {
        // TODO: sentry (should be detected earlier)
        throw new Error('secrets are missing in the job object');
    }
    ctx.logger.info("Writing secrets to the project's directory");
    const keystorePath = path_1.default.join(ctx.buildDirectory, `keystore-${(0, uuid_1.v4)()}`);
    await fs_extra_1.default.writeFile(keystorePath, Buffer.from(buildCredentials.keystore.dataBase64, 'base64'));
    const credentialsJson = {
        android: {
            keystore: {
                keystorePath,
                keystorePassword: buildCredentials.keystore.keystorePassword,
                keyAlias: buildCredentials.keystore.keyAlias,
                keyPassword: buildCredentials.keystore.keyPassword,
            },
        },
    };
    await fs_extra_1.default.writeFile(path_1.default.join(ctx.buildDirectory, 'credentials.json'), JSON.stringify(credentialsJson));
}
exports.restoreCredentials = restoreCredentials;
//# sourceMappingURL=credentials.js.map