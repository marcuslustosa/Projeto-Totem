{"version":3,"file":"resolve.js","sourceRoot":"","sources":["../../src/ios/resolve.ts"],"names":[],"mappings":";;;;;;AAAA,oDAA4B;AAG5B,yDAAiD;AAIjD,SAAgB,aAAa,CAAC,GAA0B;IACtD,IAAI,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE;QAClB,OAAO,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC;KACvB;IACD,MAAM,OAAO,GAAG,0BAAS,CAAC,WAAW,CAAC,uBAAuB,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;IAC/F,IAAA,gBAAM,EAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE,gDAAgD,CAAC,CAAC;IAC/E,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC;AAPD,sCAOC;AAED,SAAgB,mBAAmB,CAAC,GAA0B;IAC5D,IAAI,GAAG,CAAC,GAAG,CAAC,sBAAsB,EAAE;QAClC,OAAO,GAAG,CAAC,GAAG,CAAC,sBAAsB,CAAC;KACvC;SAAM,IAAI,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE;QAC5B,OAAO,2CAA2C,CAAC;KACpD;SAAM;QACL,OAAO,iBAAiB,CAAC;KAC1B;AACH,CAAC;AARD,kDAQC;AAED,SAAgB,yBAAyB,CAAC,GAA0B;IAClE,IAAI,GAAG,CAAC,GAAG,CAAC,kBAAkB,EAAE;QAC9B,OAAO,GAAG,CAAC,GAAG,CAAC,kBAAkB,CAAC;KACnC;SAAM,IAAI,GAAG,CAAC,GAAG,CAAC,iBAAiB,EAAE;QACpC,OAAO,OAAO,CAAC;KAChB;SAAM;QACL,OAAO,SAAS,CAAC;KAClB;AACH,CAAC;AARD,8DAQC","sourcesContent":["import assert from 'assert';\n\nimport { Ios } from '@expo/eas-build-job';\nimport { IOSConfig } from '@expo/config-plugins';\n\nimport { BuildContext } from '../context';\n\nexport function resolveScheme(ctx: BuildContext<Ios.Job>): string {\n  if (ctx.job.scheme) {\n    return ctx.job.scheme;\n  }\n  const schemes = IOSConfig.BuildScheme.getSchemesFromXcodeproj(ctx.reactNativeProjectDirectory);\n  assert(schemes.length === 1, 'Ejected project should have exactly one scheme');\n  return schemes[0];\n}\n\nexport function resolveArtifactPath(ctx: BuildContext<Ios.Job>): string {\n  if (ctx.job.applicationArchivePath) {\n    return ctx.job.applicationArchivePath;\n  } else if (ctx.job.simulator) {\n    return 'ios/build/Build/Products/*simulator/*.app';\n  } else {\n    return 'ios/build/*.ipa';\n  }\n}\n\nexport function resolveBuildConfiguration(ctx: BuildContext<Ios.Job>): string {\n  if (ctx.job.buildConfiguration) {\n    return ctx.job.buildConfiguration;\n  } else if (ctx.job.developmentClient) {\n    return 'Debug';\n  } else {\n    return 'Release';\n  }\n}\n"]}