{"version":3,"file":"appConfig.js","sourceRoot":"","sources":["../../src/utils/appConfig.ts"],"names":[],"mappings":";;;AAAA,yCAAwD;AAExD,yCAAmD;AAEnD,SAAgB,aAAa,CAAC,UAAkB,EAAE,GAAQ,EAAE,MAAc;IACxE,MAAM,kBAAkB,GAAsB,OAAO,CAAC,GAAG,CAAC;IAC1D,MAAM,mBAAmB,GAAG,OAAO,CAAC,IAAI,CAAC;IACzC,MAAM,kBAAkB,GAAG,OAAO,CAAC,GAAG,CAAC;IACvC,MAAM,mBAAmB,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;IACjD,MAAM,mBAAmB,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;IAEjD,MAAM,WAAW,GAA2C,EAAE,CAAC;IAC/D,IAAI;QACF,OAAO,CAAC,GAAG,qBAAQ,GAAG,CAAE,CAAC;QACzB,OAAO,CAAC,IAAI,GAAG,GAAG,EAAE;YAClB,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;QACxD,CAAC,CAAC;QACF,OAAO,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC;QAC/B,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,UAAU,GAAG,IAAS;YAC3C,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,oBAAW,CAAC,IAAI,EAAE,CAAC,CAAC;YACrE,OAAO,mBAAmB,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACzD,CAAC,CAAC;QACF,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,UAAU,GAAG,IAAS;YAC3C,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,oBAAW,CAAC,KAAK,EAAE,CAAC,CAAC;YACtE,OAAO,mBAAmB,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACzD,CAAC,CAAC;QACF,OAAO,IAAA,kBAAS,EAAC,UAAU,EAAE;YAC3B,yBAAyB,EAAE,IAAI;YAC/B,cAAc,EAAE,IAAI;SACrB,CAAC,CAAC;KACJ;IAAC,OAAO,GAAG,EAAE;QACZ,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,mBAAmB,CAAC;QAC3C,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,mBAAmB,CAAC;QAC3C,WAAW,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;YACtC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QACH,MAAM,GAAG,CAAC;KACX;YAAS;QACR,OAAO,CAAC,GAAG,GAAG,kBAAkB,CAAC;QACjC,OAAO,CAAC,IAAI,GAAG,mBAAmB,CAAC;QACnC,OAAO,CAAC,GAAG,GAAG,kBAAkB,CAAC;QACjC,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,mBAAmB,CAAC;QAC3C,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,mBAAmB,CAAC;KAC5C;AACH,CAAC;AAxCD,sCAwCC","sourcesContent":["import { getConfig, ProjectConfig } from '@expo/config';\nimport { Env } from '@expo/eas-build-job';\nimport { bunyan, LoggerLevel } from '@expo/logger';\n\nexport function readAppConfig(projectDir: string, env: Env, logger: bunyan): ProjectConfig {\n  const originalProcessEnv: NodeJS.ProcessEnv = process.env;\n  const originalProcessExit = process.exit;\n  const originalProcessCwd = process.cwd;\n  const originalStdoutWrite = process.stdout.write;\n  const originalStderrWrite = process.stderr.write;\n\n  const stdoutStore: { text: string; level: LoggerLevel }[] = [];\n  try {\n    process.env = { ...env };\n    process.exit = () => {\n      throw new Error('Failed to evaluate app config file');\n    };\n    process.cwd = () => projectDir;\n    process.stdout.write = function (...args: any) {\n      stdoutStore.push({ text: String(args[0]), level: LoggerLevel.INFO });\n      return originalStdoutWrite.apply(process.stdout, args);\n    };\n    process.stderr.write = function (...args: any) {\n      stdoutStore.push({ text: String(args[0]), level: LoggerLevel.ERROR });\n      return originalStderrWrite.apply(process.stderr, args);\n    };\n    return getConfig(projectDir, {\n      skipSDKVersionRequirement: true,\n      isPublicConfig: true,\n    });\n  } catch (err) {\n    process.stdout.write = originalStdoutWrite;\n    process.stderr.write = originalStderrWrite;\n    stdoutStore.forEach(({ text, level }) => {\n      logger[level](text.trim());\n    });\n    throw err;\n  } finally {\n    process.env = originalProcessEnv;\n    process.exit = originalProcessExit;\n    process.cwd = originalProcessCwd;\n    process.stdout.write = originalStdoutWrite;\n    process.stderr.write = originalStderrWrite;\n  }\n}\n"]}