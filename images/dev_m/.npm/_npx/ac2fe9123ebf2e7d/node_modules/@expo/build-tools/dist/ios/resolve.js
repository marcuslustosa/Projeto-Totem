"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveBuildConfiguration = exports.resolveArtifactPath = exports.resolveScheme = void 0;
const assert_1 = __importDefault(require("assert"));
const config_plugins_1 = require("@expo/config-plugins");
function resolveScheme(ctx) {
    if (ctx.job.scheme) {
        return ctx.job.scheme;
    }
    const schemes = config_plugins_1.IOSConfig.BuildScheme.getSchemesFromXcodeproj(ctx.reactNativeProjectDirectory);
    (0, assert_1.default)(schemes.length === 1, 'Ejected project should have exactly one scheme');
    return schemes[0];
}
exports.resolveScheme = resolveScheme;
function resolveArtifactPath(ctx) {
    if (ctx.job.applicationArchivePath) {
        return ctx.job.applicationArchivePath;
    }
    else if (ctx.job.simulator) {
        return 'ios/build/Build/Products/*simulator/*.app';
    }
    else {
        return 'ios/build/*.ipa';
    }
}
exports.resolveArtifactPath = resolveArtifactPath;
function resolveBuildConfiguration(ctx) {
    if (ctx.job.buildConfiguration) {
        return ctx.job.buildConfiguration;
    }
    else if (ctx.job.developmentClient) {
        return 'Debug';
    }
    else {
        return 'Release';
    }
}
exports.resolveBuildConfiguration = resolveBuildConfiguration;
//# sourceMappingURL=resolve.js.map