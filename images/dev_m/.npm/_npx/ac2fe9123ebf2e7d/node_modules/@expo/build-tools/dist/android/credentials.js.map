{"version":3,"file":"credentials.js","sourceRoot":"","sources":["../../src/android/credentials.ts"],"names":[],"mappings":";;;;;;AAAA,gDAAwB;AAGxB,wDAA0B;AAC1B,+BAAoC;AAIpC,KAAK,UAAU,kBAAkB,CAAC,GAA8B;IAC9D,MAAM,EAAE,gBAAgB,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC;IAC7C,IAAI,CAAC,gBAAgB,EAAE;QACrB,4CAA4C;QAC5C,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;KAC1D;IACD,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,4CAA4C,CAAC,CAAC;IAC9D,MAAM,YAAY,GAAG,cAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,YAAY,IAAA,SAAM,GAAE,EAAE,CAAC,CAAC;IAC3E,MAAM,kBAAE,CAAC,SAAS,CAAC,YAAY,EAAE,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC9F,MAAM,eAAe,GAAG;QACtB,OAAO,EAAE;YACP,QAAQ,EAAE;gBACR,YAAY;gBACZ,gBAAgB,EAAE,gBAAgB,CAAC,QAAQ,CAAC,gBAAgB;gBAC5D,QAAQ,EAAE,gBAAgB,CAAC,QAAQ,CAAC,QAAQ;gBAC5C,WAAW,EAAE,gBAAgB,CAAC,QAAQ,CAAC,WAAW;aACnD;SACF;KACF,CAAC;IACF,MAAM,kBAAE,CAAC,SAAS,CAChB,cAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,EACjD,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAChC,CAAC;AACJ,CAAC;AAEQ,gDAAkB","sourcesContent":["import path from 'path';\n\nimport { Android } from '@expo/eas-build-job';\nimport fs from 'fs-extra';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { BuildContext } from '../context';\n\nasync function restoreCredentials(ctx: BuildContext<Android.Job>): Promise<void> {\n  const { buildCredentials } = ctx.job.secrets;\n  if (!buildCredentials) {\n    // TODO: sentry (should be detected earlier)\n    throw new Error('secrets are missing in the job object');\n  }\n  ctx.logger.info(\"Writing secrets to the project's directory\");\n  const keystorePath = path.join(ctx.buildDirectory, `keystore-${uuidv4()}`);\n  await fs.writeFile(keystorePath, Buffer.from(buildCredentials.keystore.dataBase64, 'base64'));\n  const credentialsJson = {\n    android: {\n      keystore: {\n        keystorePath,\n        keystorePassword: buildCredentials.keystore.keystorePassword,\n        keyAlias: buildCredentials.keystore.keyAlias,\n        keyPassword: buildCredentials.keystore.keyPassword,\n      },\n    },\n  };\n  await fs.writeFile(\n    path.join(ctx.buildDirectory, 'credentials.json'),\n    JSON.stringify(credentialsJson)\n  );\n}\n\nexport { restoreCredentials };\n"]}