"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isTVOS = void 0;
const config_plugins_1 = require("@expo/config-plugins");
const resolve_1 = require("./resolve");
// Functions specific to Apple TV support should be added here
/**
 * Use XcodeUtils to check if a build configuration is for Apple TV and not iOS
 *
 * @param ctx The build context
 * @returns true if this is an Apple TV configuration, false otherwise
 */
async function isTVOS(ctx) {
    var _a, _b;
    const scheme = (0, resolve_1.resolveScheme)(ctx);
    const project = config_plugins_1.IOSConfig.XcodeUtils.getPbxproj(ctx.reactNativeProjectDirectory);
    const targetName = await config_plugins_1.IOSConfig.BuildScheme.getApplicationTargetNameForSchemeAsync(ctx.reactNativeProjectDirectory, scheme);
    const buildConfiguration = (0, resolve_1.resolveBuildConfiguration)(ctx);
    const xcBuildConfiguration = config_plugins_1.IOSConfig.Target.getXCBuildConfigurationFromPbxproj(project, {
        targetName,
        buildConfiguration,
    });
    return (_b = (_a = xcBuildConfiguration === null || xcBuildConfiguration === void 0 ? void 0 : xcBuildConfiguration.buildSettings) === null || _a === void 0 ? void 0 : _a.SDKROOT) === null || _b === void 0 ? void 0 : _b.includes('appletv');
}
exports.isTVOS = isTVOS;
//# sourceMappingURL=tvos.js.map