{"version":3,"file":"tvos.js","sourceRoot":"","sources":["../../src/ios/tvos.ts"],"names":[],"mappings":";;;AACA,yDAAiD;AAIjD,uCAAqE;AAErE,8DAA8D;AAE9D;;;;;GAKG;AACI,KAAK,UAAU,MAAM,CAAC,GAA0B;;IACrD,MAAM,MAAM,GAAG,IAAA,uBAAa,EAAC,GAAG,CAAC,CAAC;IAElC,MAAM,OAAO,GAAG,0BAAS,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;IAEjF,MAAM,UAAU,GAAG,MAAM,0BAAS,CAAC,WAAW,CAAC,sCAAsC,CACnF,GAAG,CAAC,2BAA2B,EAC/B,MAAM,CACP,CAAC;IAEF,MAAM,kBAAkB,GAAG,IAAA,mCAAyB,EAAC,GAAG,CAAC,CAAC;IAE1D,MAAM,oBAAoB,GAAG,0BAAS,CAAC,MAAM,CAAC,kCAAkC,CAAC,OAAO,EAAE;QACxF,UAAU;QACV,kBAAkB;KACnB,CAAC,CAAC;IACH,OAAO,MAAA,MAAA,oBAAoB,aAApB,oBAAoB,uBAApB,oBAAoB,CAAE,aAAa,0CAAE,OAAO,0CAAE,QAAQ,CAAC,SAAS,CAAC,CAAC;AAC3E,CAAC;AAjBD,wBAiBC","sourcesContent":["import { Ios } from '@expo/eas-build-job';\nimport { IOSConfig } from '@expo/config-plugins';\n\nimport { BuildContext } from '../context';\n\nimport { resolveBuildConfiguration, resolveScheme } from './resolve';\n\n// Functions specific to Apple TV support should be added here\n\n/**\n * Use XcodeUtils to check if a build configuration is for Apple TV and not iOS\n *\n * @param ctx The build context\n * @returns true if this is an Apple TV configuration, false otherwise\n */\nexport async function isTVOS(ctx: BuildContext<Ios.Job>): Promise<boolean> {\n  const scheme = resolveScheme(ctx);\n\n  const project = IOSConfig.XcodeUtils.getPbxproj(ctx.reactNativeProjectDirectory);\n\n  const targetName = await IOSConfig.BuildScheme.getApplicationTargetNameForSchemeAsync(\n    ctx.reactNativeProjectDirectory,\n    scheme\n  );\n\n  const buildConfiguration = resolveBuildConfiguration(ctx);\n\n  const xcBuildConfiguration = IOSConfig.Target.getXCBuildConfigurationFromPbxproj(project, {\n    targetName,\n    buildConfiguration,\n  });\n  return xcBuildConfiguration?.buildSettings?.SDKROOT?.includes('appletv');\n}\n"]}