import { Job } from '@expo/eas-build-job';
import { BuildContext } from '../context';
export declare function setRuntimeVersionNativelyAsync(ctx: BuildContext<Job>, runtimeVersion: string): Promise<void>;
/**
 * Used for when Expo Updates is pointed at an EAS server.
 */
export declare function setChannelNativelyAsync(ctx: BuildContext<Job>): Promise<void>;
/**
 * Used for classic Expo Updates
 */
export declare function setClassicReleaseChannelNativelyAsync(ctx: BuildContext<Job>): Promise<void>;
/**
 * Used for classic Expo Updates
 */
export declare function getNativelyDefinedClassicReleaseChannelAsync(ctx: BuildContext<Job>): Promise<string | null>;
export declare function configureClassicExpoUpdatesAsync(ctx: BuildContext<Job>): Promise<void>;
export declare function configureEASExpoUpdatesAsync(ctx: BuildContext<Job>): Promise<void>;
export declare function configureExpoUpdatesIfInstalledAsync(ctx: BuildContext<Job>): Promise<void>;
export declare function getChannelAsync(ctx: BuildContext<Job>): Promise<string | null>;
export declare function getRuntimeVersionAsync(ctx: BuildContext<Job>): Promise<string | null>;
export declare function isEASUpdateConfigured(ctx: BuildContext<Job>): boolean;
